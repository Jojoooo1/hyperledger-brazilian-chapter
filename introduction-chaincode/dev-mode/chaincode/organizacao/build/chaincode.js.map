{"version":3,"sources":["../app/chaincode.js"],"names":["Chaincode","Init","stub","ret","getFunctionAndParameters","console","info","shim","success","Invoke","getTxID","getArgs","method","fcn","error","payload","params","err","log","stack","message","getDataById","args","data","Error","dataAsBytes","getState","toString","getDataByRange","thisClass","JSON","parse","startKey","endKey","undefined","resultsIterator","getStateByRange","results","Buffer","from","stringify","createOrganizacao","Organizacao","updateOrganizacao","deleteOrganizacao","richQuery","queryString","pagination","pageSize","queryResults","getQueryResultForQueryString","getQueryResult","getQueryResultForQueryStringWithPagination","parseInt","bookmark","iterator","metadata","getQueryResultWithPagination","getAllResults","ResponseMetadata","RecordsCount","fetched_records_count","Bookmark","isHistory","allResults","res","next","value","jsonResponse","TxId","tx_id","Timestamp","timestamp","IsDelete","is_delete","Value","Key","key","Record","push","done","close","getHistory","length","id","getHistoryForKey"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEe,MAAMA,SAAN,CAAgB;AAC7B,QAAMC,IAAN,CAAWC,IAAX,EAAiB;AACf,UAAMC,GAAG,GAAGD,IAAI,CAACE,wBAAL,EAAZ;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAaH,GAAb;AACAE,IAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;AACA,WAAOC,oBAAKC,OAAL,EAAP;AACD;;AAED,QAAMC,MAAN,CAAaP,IAAb,EAAmB;AACjBG,IAAAA,OAAO,CAACC,IAAR,CAAa,0CAAb;AACAD,IAAAA,OAAO,CAACC,IAAR,CAAc,mBAAkBJ,IAAI,CAACQ,OAAL,EAAe,EAA/C;AACAL,IAAAA,OAAO,CAACC,IAAR,CAAc,SAAQJ,IAAI,CAACS,OAAL,EAAe,EAArC;AAEA,UAAMR,GAAG,GAAGD,IAAI,CAACE,wBAAL,EAAZ;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAaH,GAAb;AAEA,UAAMS,MAAM,GAAG,KAAKT,GAAG,CAACU,GAAT,CAAf,CARiB,CAUjB;;AACA,QAAI,CAACD,MAAL,EAAa;AACX,aAAOL,oBAAKO,KAAL,CAAY,oBAAmBX,GAAG,CAACU,GAAI,kBAAvC,CAAP;AACD;;AAED,QAAI;AACF,YAAME,OAAO,GAAG,MAAMH,MAAM,CAACV,IAAD,EAAOC,GAAG,CAACa,MAAX,EAAmB,IAAnB,CAA5B;AACA,aAAOT,oBAAKC,OAAL,CAAaO,OAAb,CAAP;AACD,KAHD,CAGE,OAAOE,GAAP,EAAY;AACZZ,MAAAA,OAAO,CAACa,GAAR,CAAYD,GAAG,CAACE,KAAhB;AACA,aAAOZ,oBAAKO,KAAL,CAAWG,GAAG,CAACG,OAAJ,GAAcH,GAAG,CAACG,OAAlB,GAA4B,uDAAvC,CAAP;AACD;AACF;;AAED,QAAMC,WAAN,CAAkBnB,IAAlB,EAAwBoB,IAAxB,EAA8B;AAC5B;AACA,UAAMC,IAAI,GAAGD,IAAI,CAAC,CAAD,CAAjB,CAF4B,CAI5B;;AACA,QAAI,CAACC,IAAL,EAAW;AACT,YAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAEDnB,IAAAA,OAAO,CAACC,IAAR,CAAa,2BAAb;AAEA,UAAMmB,WAAW,GAAG,MAAMvB,IAAI,CAACwB,QAAL,CAAcH,IAAd,CAA1B;AAEAlB,IAAAA,OAAO,CAACC,IAAR,CAAa,oBAAb;AACAD,IAAAA,OAAO,CAACa,GAAR,CAAYO,WAAW,CAACE,QAAZ,EAAZ;AACAtB,IAAAA,OAAO,CAACC,IAAR,CAAa,oBAAb;AAEAD,IAAAA,OAAO,CAACC,IAAR,CAAa,yBAAb;AAEA,WAAOmB,WAAP;AACD,GApD4B,CAsD7B;AACA;;;AACA,QAAMG,cAAN,CAAqB1B,IAArB,EAA2BoB,IAA3B,EAAiCO,SAAjC,EAA4C;AAC1C,QAAIN,IAAJ,CAD0C,CAG1C;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAGO,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACK,QAAL,EAAX,CAAP;AACD,KAFD,CAEE,OAAOV,GAAP,EAAY;AACZ,YAAM,IAAIO,KAAJ,CAAU,oEAAV,CAAN;AACD,KARyC,CAU1C;;;AACA,UAAM;AAAEQ,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuBV,IAA7B;;AACA,QAAIS,QAAQ,KAAKE,SAAb,IAA0BD,MAAM,KAAKC,SAAzC,EAAoD;AAClD,YAAM,IAAIV,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDnB,IAAAA,OAAO,CAACC,IAAR,CAAa,8BAAb;AAEA,UAAM6B,eAAe,GAAG,MAAMjC,IAAI,CAACkC,eAAL,CAAqBJ,QAArB,EAA+BC,MAA/B,CAA9B;AACA,UAAMrB,MAAM,GAAGiB,SAAS,CAAC,eAAD,CAAxB;AACA,UAAMQ,OAAO,GAAG,MAAMzB,MAAM,CAACuB,eAAD,EAAkB,KAAlB,CAA5B;AAEA9B,IAAAA,OAAO,CAACC,IAAR,CAAa,4BAAb;AAEA,WAAOgC,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACU,SAAL,CAAeH,OAAf,CAAZ,CAAP;AACD;;AAED,QAAMI,iBAAN,CAAwBvC,IAAxB,EAA8BoB,IAA9B,EAAoC;AAClC,QAAI;AACF,YAAMoB,WAAW,CAACD,iBAAZ,CAA8BvC,IAA9B,EAAoCoB,IAApC,CAAN;AACD,KAFD,CAEE,OAAOL,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;AACF;;AAED,QAAM0B,iBAAN,CAAwBzC,IAAxB,EAA8BoB,IAA9B,EAAoC;AAClC,QAAI;AACF,YAAMoB,WAAW,CAACC,iBAAZ,CAA8BzC,IAA9B,EAAoCoB,IAApC,CAAN;AACD,KAFD,CAEE,OAAOL,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;AACF;;AAED,QAAM2B,iBAAN,CAAwB1C,IAAxB,EAA8BoB,IAA9B,EAAoC;AAClC,QAAI;AACF,YAAMoB,WAAW,CAACE,iBAAZ,CAA8B1C,IAA9B,EAAoCoB,IAApC,CAAN;AACD,KAFD,CAEE,OAAOL,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;AACF,GAzG4B,CA2G7B;AACA;;;AACA,QAAM4B,SAAN,CAAgB3C,IAAhB,EAAsBoB,IAAtB,EAA4BO,SAA5B,EAAuC;AACrC,QAAIN,IAAJ;AACA,QAAIX,MAAJ;AACA,QAAII,MAAJ,CAHqC,CAKrC;;AACA,QAAI;AACFO,MAAAA,IAAI,GAAGO,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACK,QAAL,EAAX,CAAP;AACD,KAFD,CAEE,OAAOV,GAAP,EAAY;AACZ,YAAM,IAAIO,KAAJ,CAAU,oEAAV,CAAN;AACD,KAVoC,CAYrC;;;AACA,QAAI,CAACD,IAAI,CAACuB,WAAV,EAAuB;AACrB,YAAM,IAAItB,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,UAAMsB,WAAW,GAAGhB,IAAI,CAACU,SAAL,CAAejB,IAAI,CAACuB,WAApB,CAApB,CAjBqC,CAmBrC;;AACA,QAAIvB,IAAI,CAACwB,UAAL,IAAmBxB,IAAI,CAACwB,UAAL,CAAgBC,QAAvC,EAAiD;AAC/ChC,MAAAA,MAAM,GAAG;AAAE8B,QAAAA,WAAF;AAAeC,QAAAA,UAAU,EAAExB,IAAI,CAACwB;AAAhC,OAAT;AACAnC,MAAAA,MAAM,GAAGiB,SAAS,CAAC,4CAAD,CAAlB;AACD,KAHD,MAGO;AACLb,MAAAA,MAAM,GAAG8B,WAAT;AACAlC,MAAAA,MAAM,GAAGiB,SAAS,CAAC,8BAAD,CAAlB;AACD;;AACD,QAAIoB,YAAJ;;AACA,QAAI;AACFA,MAAAA,YAAY,GAAG,MAAMrC,MAAM,CAACV,IAAD,EAAOc,MAAP,EAAea,SAAf,CAA3B;AACD,KAFD,CAEE,OAAOZ,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;;AAED,WAAOgC,YAAP;AACD,GAhJ4B,CAkJ7B;;;AACA,QAAMC,4BAAN,CAAmChD,IAAnC,EAAyC4C,WAAzC,EAAsDjB,SAAtD,EAAiE;AAC/D,QAAI;AACFxB,MAAAA,OAAO,CAACC,IAAR,CAAa,oCAAb;AAEA,YAAM6B,eAAe,GAAG,MAAMjC,IAAI,CAACiD,cAAL,CAAoBL,WAApB,CAA9B;AACA,YAAMlC,MAAM,GAAGiB,SAAS,CAAC,eAAD,CAAxB;AACA,YAAMQ,OAAO,GAAG,MAAMzB,MAAM,CAACuB,eAAD,EAAkB,KAAlB,CAA5B;AAEA9B,MAAAA,OAAO,CAACa,GAAR,CAAY,gDAAZ;AAEA,aAAOoB,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACU,SAAL,CAAeH,OAAf,CAAZ,CAAP;AACD,KAVD,CAUE,OAAOpB,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;AACF,GAjK4B,CAmK7B;AACA;;;AACA,QAAMmC,0CAAN,CAAiDlD,IAAjD,EAAuDoB,IAAvD,EAA6DO,SAA7D,EAAwE;AACtE,QAAI;AACFxB,MAAAA,OAAO,CAACa,GAAR,CAAY,gEAAZ;AAEA,YAAM;AAAE4B,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAA8BzB,IAApC;AACA,YAAM0B,QAAQ,GAAGK,QAAQ,CAACN,UAAU,CAACC,QAAZ,EAAsB,EAAtB,CAAzB;AACA,YAAMM,QAAQ,GAAGP,UAAU,CAACO,QAAX,IAAuB,EAAxC;AAEA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAyB,MAAMtD,IAAI,CAACuD,4BAAL,CAAkCX,WAAlC,EAA+CE,QAA/C,EAAyDM,QAAzD,CAArC;AAEA,YAAMI,aAAa,GAAG7B,SAAS,CAAC,eAAD,CAA/B;AACA,YAAMQ,OAAO,GAAG,MAAMqB,aAAa,CAACH,QAAD,EAAW,KAAX,CAAnC,CAVE,CAWF;;AACAlB,MAAAA,OAAO,CAACsB,gBAAR,GAA2B;AACzBC,QAAAA,YAAY,EAAEJ,QAAQ,CAACK,qBADE;AAEzBC,QAAAA,QAAQ,EAAEN,QAAQ,CAACF;AAFM,OAA3B;AAKAjD,MAAAA,OAAO,CAACa,GAAR,CAAY,8DAAZ;AACA,aAAOoB,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACU,SAAL,CAAeH,OAAf,CAAZ,CAAP;AACD,KAnBD,CAmBE,OAAOpB,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;AACF;;AAED,QAAMyC,aAAN,CAAoBH,QAApB,EAA8BQ,SAA9B,EAAyC;AACvC,UAAMC,UAAU,GAAG,EAAnB;;AACA,WAAO,IAAP,EAAa;AACX;AACA,YAAMC,GAAG,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAlB;;AAEA,UAAID,GAAG,CAACE,KAAJ,IAAaF,GAAG,CAACE,KAAJ,CAAUA,KAAV,CAAgBxC,QAAhB,EAAjB,EAA6C;AAC3C,cAAMyC,YAAY,GAAG,EAArB,CAD2C,CAE3C;;AAEA,YAAIL,SAAS,IAAIA,SAAS,KAAK,IAA/B,EAAqC;AACnCK,UAAAA,YAAY,CAACC,IAAb,GAAoBJ,GAAG,CAACE,KAAJ,CAAUG,KAA9B;AACAF,UAAAA,YAAY,CAACG,SAAb,GAAyBN,GAAG,CAACE,KAAJ,CAAUK,SAAnC;AACAJ,UAAAA,YAAY,CAACK,QAAb,GAAwBR,GAAG,CAACE,KAAJ,CAAUO,SAAV,CAAoB/C,QAApB,EAAxB;;AACA,cAAI;AACFyC,YAAAA,YAAY,CAACO,KAAb,GAAqB7C,IAAI,CAACC,KAAL,CAAWkC,GAAG,CAACE,KAAJ,CAAUA,KAAV,CAAgBxC,QAAhB,CAAyB,MAAzB,CAAX,CAArB;AACD,WAFD,CAEE,OAAOV,GAAP,EAAY;AACZZ,YAAAA,OAAO,CAACa,GAAR,CAAYD,GAAZ;AACAmD,YAAAA,YAAY,CAACO,KAAb,GAAqBV,GAAG,CAACE,KAAJ,CAAUA,KAAV,CAAgBxC,QAAhB,CAAyB,MAAzB,CAArB;AACD;AACF,SAVD,MAUO;AACLyC,UAAAA,YAAY,CAACQ,GAAb,GAAmBX,GAAG,CAACE,KAAJ,CAAUU,GAA7B;;AACA,cAAI;AACFT,YAAAA,YAAY,CAACU,MAAb,GAAsBhD,IAAI,CAACC,KAAL,CAAWkC,GAAG,CAACE,KAAJ,CAAUA,KAAV,CAAgBxC,QAAhB,CAAyB,MAAzB,CAAX,CAAtB;AACD,WAFD,CAEE,OAAOV,GAAP,EAAY;AACZZ,YAAAA,OAAO,CAACa,GAAR,CAAYD,GAAZ;AACAmD,YAAAA,YAAY,CAACU,MAAb,GAAsBb,GAAG,CAACE,KAAJ,CAAUA,KAAV,CAAgBxC,QAAhB,CAAyB,MAAzB,CAAtB;AACD;AACF;;AACDqC,QAAAA,UAAU,CAACe,IAAX,CAAgBX,YAAhB;AACD;;AACD,UAAIH,GAAG,CAACe,IAAR,EAAc;AACZ3E,QAAAA,OAAO,CAACa,GAAR,CAAY,aAAZ;AACA,cAAMqC,QAAQ,CAAC0B,KAAT,EAAN;AACA5E,QAAAA,OAAO,CAACC,IAAR,CAAawB,IAAI,CAACU,SAAL,CAAewB,UAAf,CAAb;AACA,eAAOA,UAAP;AACD;AACF;AACF;;AAED,QAAMkB,UAAN,CAAiBhF,IAAjB,EAAuBoB,IAAvB,EAA6BO,SAA7B,EAAwC;AACtC,QAAI;AACF,UAAIP,IAAI,CAAC6D,MAAL,GAAc,CAAlB,EAAqB;AACnB,cAAM,IAAI3D,KAAJ,CAAU,4DAAV,CAAN;AACD;;AACD,YAAM4D,EAAE,GAAG9D,IAAI,CAAC,CAAD,CAAf;AACAjB,MAAAA,OAAO,CAACC,IAAR,CAAc,8BAA6B8E,EAAG,EAA9C;AAEA,YAAMjD,eAAe,GAAG,MAAMjC,IAAI,CAACmF,gBAAL,CAAsBD,EAAtB,CAA9B;AACA,YAAMxE,MAAM,GAAGiB,SAAS,CAAC,eAAD,CAAxB;AACA,YAAMQ,OAAO,GAAG,MAAMzB,MAAM,CAACuB,eAAD,EAAkB,IAAlB,CAA5B;AAEA,aAAOG,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACU,SAAL,CAAeH,OAAf,CAAZ,CAAP;AACD,KAZD,CAYE,OAAOpB,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;AACF;;AAtP4B","sourcesContent":["import shim from 'fabric-shim';\nimport * as Organizacao from './controllers/organizacao';\n\nexport default class Chaincode {\n  async Init(stub) {\n    const ret = stub.getFunctionAndParameters();\n    console.info(ret);\n    console.info('=========== Instantiated Chaincode ===========');\n    return shim.success();\n  }\n\n  async Invoke(stub) {\n    console.info('########################################');\n    console.info(`Transaction ID: ${stub.getTxID()}`);\n    console.info(`Args: ${stub.getArgs()}`);\n\n    const ret = stub.getFunctionAndParameters();\n    console.info(ret);\n\n    const method = this[ret.fcn];\n\n    // Verifies if method exist\n    if (!method) {\n      return shim.error(`funcao com nome \"${ret.fcn}\" nao encontrado`);\n    }\n\n    try {\n      const payload = await method(stub, ret.params, this);\n      return shim.success(payload);\n    } catch (err) {\n      console.log(err.stack);\n      return shim.error(err.message ? err.message : 'Ocorreu um erro, Por favor tente novamente mais tarde');\n    }\n  }\n\n  async getDataById(stub, args) {\n    // Gets id\n    const data = args[0];\n\n    // Verifies id is not empty\n    if (!data) {\n      throw new Error('Por favor especifique um id');\n    }\n\n    console.info('--- start getDataById ---');\n\n    const dataAsBytes = await stub.getState(data);\n\n    console.info('==================');\n    console.log(dataAsBytes.toString());\n    console.info('==================');\n\n    console.info('--- end getDataById ---');\n\n    return dataAsBytes;\n  }\n\n  // The keys are returned by the iterator in lexical order. Note that startKey and endKey can be empty string\n  // Query is re-executed during validation phase\n  async getDataByRange(stub, args, thisClass) {\n    let data;\n\n    // 1. Parses JSON stringified request\n    try {\n      data = JSON.parse(args.toString());\n    } catch (err) {\n      throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n    }\n\n    // 2. Gets identifier\n    const { startKey, endKey } = data;\n    if (startKey === undefined || endKey === undefined) {\n      throw new Error('startKey/endKey nao pode ser \"undefined\"');\n    }\n\n    console.info('--- start getDataByRange ---');\n\n    const resultsIterator = await stub.getStateByRange(startKey, endKey);\n    const method = thisClass['getAllResults'];\n    const results = await method(resultsIterator, false);\n\n    console.info('--- end getDataByRange ---');\n\n    return Buffer.from(JSON.stringify(results));\n  }\n\n  async createOrganizacao(stub, args) {\n    try {\n      await Organizacao.createOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOrganizacao(stub, args) {\n    try {\n      await Organizacao.updateOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteOrganizacao(stub, args) {\n    try {\n      await Organizacao.deleteOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  // Rich Query (Only supported if CouchDB is used as state database):\n  // ex: peer chaincode query -C myc -n mycc -c '{\"Args\":[\"richQuery\",\"{\\\"selector\\\":{\\\"docType\\\":\\\"batch\\\"}}\"]}'\n  async richQuery(stub, args, thisClass) {\n    let data;\n    let method;\n    let params;\n\n    // 1. Parses JSON stringified request\n    try {\n      data = JSON.parse(args.toString());\n    } catch (err) {\n      throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n    }\n\n    // Verifies if queryString is passed\n    if (!data.queryString) {\n      throw new Error('queryString nao pode ser vazio');\n    }\n\n    const queryString = JSON.stringify(data.queryString);\n\n    // If pagination params are passed gets QueryResult with pagination\n    if (data.pagination && data.pagination.pageSize) {\n      params = { queryString, pagination: data.pagination };\n      method = thisClass['getQueryResultForQueryStringWithPagination'];\n    } else {\n      params = queryString;\n      method = thisClass['getQueryResultForQueryString'];\n    }\n    let queryResults;\n    try {\n      queryResults = await method(stub, params, thisClass);\n    } catch (err) {\n      throw err;\n    }\n\n    return queryResults;\n  }\n\n  // getQueryResultForQueryString executes the query passed in query string.\n  async getQueryResultForQueryString(stub, queryString, thisClass) {\n    try {\n      console.info('- getQueryResultForQueryString ---');\n\n      const resultsIterator = await stub.getQueryResult(queryString);\n      const method = thisClass['getAllResults'];\n      const results = await method(resultsIterator, false);\n\n      console.log('--- end using getQueryResultForQueryString ---');\n\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  // ====== Pagination =========================================================================\n  // queryString, pageSize, bookmark\n  async getQueryResultForQueryStringWithPagination(stub, args, thisClass) {\n    try {\n      console.log('--- start using getQueryResultForQueryStringWithPagination ---');\n\n      const { queryString, pagination } = args;\n      const pageSize = parseInt(pagination.pageSize, 10);\n      const bookmark = pagination.bookmark || '';\n\n      const { iterator, metadata } = await stub.getQueryResultWithPagination(queryString, pageSize, bookmark);\n\n      const getAllResults = thisClass['getAllResults'];\n      const results = await getAllResults(iterator, false);\n      // use RecordsCount and Bookmark to keep consistency with the go sample\n      results.ResponseMetadata = {\n        RecordsCount: metadata.fetched_records_count,\n        Bookmark: metadata.bookmark\n      };\n\n      console.log('--- end using getQueryResultForQueryStringWithPagination ---');\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getAllResults(iterator, isHistory) {\n    const allResults = [];\n    while (true) {\n      /* eslint-disable no-await-in-loop */\n      const res = await iterator.next();\n\n      if (res.value && res.value.value.toString()) {\n        const jsonResponse = {};\n        // console.log(res.value.value.toString(\"utf8\"));\n\n        if (isHistory && isHistory === true) {\n          jsonResponse.TxId = res.value.tx_id;\n          jsonResponse.Timestamp = res.value.timestamp;\n          jsonResponse.IsDelete = res.value.is_delete.toString();\n          try {\n            jsonResponse.Value = JSON.parse(res.value.value.toString('utf8'));\n          } catch (err) {\n            console.log(err);\n            jsonResponse.Value = res.value.value.toString('utf8');\n          }\n        } else {\n          jsonResponse.Key = res.value.key;\n          try {\n            jsonResponse.Record = JSON.parse(res.value.value.toString('utf8'));\n          } catch (err) {\n            console.log(err);\n            jsonResponse.Record = res.value.value.toString('utf8');\n          }\n        }\n        allResults.push(jsonResponse);\n      }\n      if (res.done) {\n        console.log('end of data');\n        await iterator.close();\n        console.info(JSON.stringify(allResults));\n        return allResults;\n      }\n    }\n  }\n\n  async getHistory(stub, args, thisClass) {\n    try {\n      if (args.length < 1) {\n        throw new Error('Incorrect number of arguments. Expecting an id to look for');\n      }\n      const id = args[0];\n      console.info(`--- start getHistoryFor:\\n ${id}`);\n\n      const resultsIterator = await stub.getHistoryForKey(id);\n      const method = thisClass['getAllResults'];\n      const results = await method(resultsIterator, true);\n\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n"],"file":"chaincode.js"}