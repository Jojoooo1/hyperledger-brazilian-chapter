{
  "{\"sourceRoot\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao\",\"filename\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/test/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao",
      "filename": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/test/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/test/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/test/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/test",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _fabricMockStub = require(\"@theledger/fabric-mock-stub\");\n\nvar _chaincode = _interopRequireDefault(require(\"../app/chaincode\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst MyChaincode = new _chaincode.default();\ndescribe('Test Organizacao chaincode', () => {\n  const mockStub = new _fabricMockStub.ChaincodeMockStub('MyMockStub', MyChaincode);\n  it('Should init without issues', async () => {\n    const response = await mockStub.mockInit('tx1', []);\n    (0, _chai.expect)(response.status).to.equal(200);\n  });\n  it('I can create an organizacao', async () => {\n    const response = await mockStub.mockInvoke('tx1', ['createOrganizacao', JSON.stringify({\n      nome: 'test',\n      cnpj: 'test'\n    })]);\n    (0, _chai.expect)(response.status).to.equal(200);\n  });\n  it('I can update an organizacao', async () => {\n    await mockStub.mockInvoke('tx1', ['updateOrganizacao', JSON.stringify({\n      nome: 'test_updated',\n      cnpj: 'test'\n    })]);\n    const dataUpdated = await mockStub.mockInvoke('tx1', ['getDataById', 'test']);\n    (0, _chai.expect)(JSON.parse(dataUpdated.payload).nome).to.equal('test_updated');\n  });\n  it('I can delete an organizacao', async () => {\n    const response = await mockStub.mockInvoke('tx1', ['deleteOrganizacao', 'test']);\n    (0, _chai.expect)(response.status).to.equal(200);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk15Q2hhaW5jb2RlIiwiQ2hhaW5jb2RlIiwiZGVzY3JpYmUiLCJtb2NrU3R1YiIsIkNoYWluY29kZU1vY2tTdHViIiwiaXQiLCJyZXNwb25zZSIsIm1vY2tJbml0Iiwic3RhdHVzIiwidG8iLCJlcXVhbCIsIm1vY2tJbnZva2UiLCJKU09OIiwic3RyaW5naWZ5Iiwibm9tZSIsImNucGoiLCJkYXRhVXBkYXRlZCIsInBhcnNlIiwicGF5bG9hZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFdBQVcsR0FBRyxJQUFJQyxrQkFBSixFQUFwQjtBQUVBQyxRQUFRLENBQUMsNEJBQUQsRUFBK0IsTUFBTTtBQUMzQyxRQUFNQyxRQUFRLEdBQUcsSUFBSUMsaUNBQUosQ0FBc0IsWUFBdEIsRUFBb0NKLFdBQXBDLENBQWpCO0FBRUFLLEVBQUFBLEVBQUUsQ0FBQyw0QkFBRCxFQUErQixZQUFZO0FBQzNDLFVBQU1DLFFBQVEsR0FBRyxNQUFNSCxRQUFRLENBQUNJLFFBQVQsQ0FBa0IsS0FBbEIsRUFBeUIsRUFBekIsQ0FBdkI7QUFDQSxzQkFBT0QsUUFBUSxDQUFDRSxNQUFoQixFQUF3QkMsRUFBeEIsQ0FBMkJDLEtBQTNCLENBQWlDLEdBQWpDO0FBQ0QsR0FIQyxDQUFGO0FBS0FMLEVBQUFBLEVBQUUsQ0FBQyw2QkFBRCxFQUFnQyxZQUFZO0FBQzVDLFVBQU1DLFFBQVEsR0FBRyxNQUFNSCxRQUFRLENBQUNRLFVBQVQsQ0FBb0IsS0FBcEIsRUFBMkIsQ0FDaEQsbUJBRGdELEVBRWhEQyxJQUFJLENBQUNDLFNBQUwsQ0FBZTtBQUNiQyxNQUFBQSxJQUFJLEVBQUUsTUFETztBQUViQyxNQUFBQSxJQUFJLEVBQUU7QUFGTyxLQUFmLENBRmdELENBQTNCLENBQXZCO0FBT0Esc0JBQU9ULFFBQVEsQ0FBQ0UsTUFBaEIsRUFBd0JDLEVBQXhCLENBQTJCQyxLQUEzQixDQUFpQyxHQUFqQztBQUNELEdBVEMsQ0FBRjtBQVdBTCxFQUFBQSxFQUFFLENBQUMsNkJBQUQsRUFBZ0MsWUFBWTtBQUM1QyxVQUFNRixRQUFRLENBQUNRLFVBQVQsQ0FBb0IsS0FBcEIsRUFBMkIsQ0FDL0IsbUJBRCtCLEVBRS9CQyxJQUFJLENBQUNDLFNBQUwsQ0FBZTtBQUNiQyxNQUFBQSxJQUFJLEVBQUUsY0FETztBQUViQyxNQUFBQSxJQUFJLEVBQUU7QUFGTyxLQUFmLENBRitCLENBQTNCLENBQU47QUFRQSxVQUFNQyxXQUFXLEdBQUcsTUFBTWIsUUFBUSxDQUFDUSxVQUFULENBQW9CLEtBQXBCLEVBQTJCLENBQUMsYUFBRCxFQUFnQixNQUFoQixDQUEzQixDQUExQjtBQUNBLHNCQUFPQyxJQUFJLENBQUNLLEtBQUwsQ0FBV0QsV0FBVyxDQUFDRSxPQUF2QixFQUFnQ0osSUFBdkMsRUFBNkNMLEVBQTdDLENBQWdEQyxLQUFoRCxDQUFzRCxjQUF0RDtBQUNELEdBWEMsQ0FBRjtBQWFBTCxFQUFBQSxFQUFFLENBQUMsNkJBQUQsRUFBZ0MsWUFBWTtBQUM1QyxVQUFNQyxRQUFRLEdBQUcsTUFBTUgsUUFBUSxDQUFDUSxVQUFULENBQW9CLEtBQXBCLEVBQTJCLENBQUMsbUJBQUQsRUFBc0IsTUFBdEIsQ0FBM0IsQ0FBdkI7QUFDQSxzQkFBT0wsUUFBUSxDQUFDRSxNQUFoQixFQUF3QkMsRUFBeEIsQ0FBMkJDLEtBQTNCLENBQWlDLEdBQWpDO0FBQ0QsR0FIQyxDQUFGO0FBSUQsQ0FwQ08sQ0FBUiIsInNvdXJjZVJvb3QiOiIvaG9tZS9qb25hdGhhbi9CdXJlYXUvSHlwZXJsZWRnZXItYnJhc2lsaWFuLWNoYXB0ZXIvbWF0ZXJpYWxzL2ludHJvZHVjdGlvbi1jaGFpbmNvZGUvZGV2LW1vZGUvY2hhaW5jb2RlL29yZ2FuaXphY2FvL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleHBlY3QgfSBmcm9tICdjaGFpJztcbmltcG9ydCB7IENoYWluY29kZU1vY2tTdHViIH0gZnJvbSAnQHRoZWxlZGdlci9mYWJyaWMtbW9jay1zdHViJztcbmltcG9ydCBDaGFpbmNvZGUgZnJvbSAnLi4vYXBwL2NoYWluY29kZSc7XG5cbmNvbnN0IE15Q2hhaW5jb2RlID0gbmV3IENoYWluY29kZSgpO1xuXG5kZXNjcmliZSgnVGVzdCBPcmdhbml6YWNhbyBjaGFpbmNvZGUnLCAoKSA9PiB7XG4gIGNvbnN0IG1vY2tTdHViID0gbmV3IENoYWluY29kZU1vY2tTdHViKCdNeU1vY2tTdHViJywgTXlDaGFpbmNvZGUpO1xuXG4gIGl0KCdTaG91bGQgaW5pdCB3aXRob3V0IGlzc3VlcycsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG1vY2tTdHViLm1vY2tJbml0KCd0eDEnLCBbXSk7XG4gICAgZXhwZWN0KHJlc3BvbnNlLnN0YXR1cykudG8uZXF1YWwoMjAwKTtcbiAgfSk7XG5cbiAgaXQoJ0kgY2FuIGNyZWF0ZSBhbiBvcmdhbml6YWNhbycsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG1vY2tTdHViLm1vY2tJbnZva2UoJ3R4MScsIFtcbiAgICAgICdjcmVhdGVPcmdhbml6YWNhbycsXG4gICAgICBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5vbWU6ICd0ZXN0JyxcbiAgICAgICAgY25wajogJ3Rlc3QnXG4gICAgICB9KVxuICAgIF0pO1xuICAgIGV4cGVjdChyZXNwb25zZS5zdGF0dXMpLnRvLmVxdWFsKDIwMCk7XG4gIH0pO1xuXG4gIGl0KCdJIGNhbiB1cGRhdGUgYW4gb3JnYW5pemFjYW8nLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgbW9ja1N0dWIubW9ja0ludm9rZSgndHgxJywgW1xuICAgICAgJ3VwZGF0ZU9yZ2FuaXphY2FvJyxcbiAgICAgIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbm9tZTogJ3Rlc3RfdXBkYXRlZCcsXG4gICAgICAgIGNucGo6ICd0ZXN0J1xuICAgICAgfSlcbiAgICBdKTtcblxuICAgIGNvbnN0IGRhdGFVcGRhdGVkID0gYXdhaXQgbW9ja1N0dWIubW9ja0ludm9rZSgndHgxJywgWydnZXREYXRhQnlJZCcsICd0ZXN0J10pO1xuICAgIGV4cGVjdChKU09OLnBhcnNlKGRhdGFVcGRhdGVkLnBheWxvYWQpLm5vbWUpLnRvLmVxdWFsKCd0ZXN0X3VwZGF0ZWQnKTtcbiAgfSk7XG5cbiAgaXQoJ0kgY2FuIGRlbGV0ZSBhbiBvcmdhbml6YWNhbycsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG1vY2tTdHViLm1vY2tJbnZva2UoJ3R4MScsIFsnZGVsZXRlT3JnYW5pemFjYW8nLCAndGVzdCddKTtcbiAgICBleHBlY3QocmVzcG9uc2Uuc3RhdHVzKS50by5lcXVhbCgyMDApO1xuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "MyChaincode",
        "Chaincode",
        "describe",
        "mockStub",
        "ChaincodeMockStub",
        "it",
        "response",
        "mockInit",
        "status",
        "to",
        "equal",
        "mockInvoke",
        "JSON",
        "stringify",
        "nome",
        "cnpj",
        "dataUpdated",
        "parse",
        "payload"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,WAAW,GAAG,IAAIC,kBAAJ,EAApB;AAEAC,QAAQ,CAAC,4BAAD,EAA+B,MAAM;AAC3C,QAAMC,QAAQ,GAAG,IAAIC,iCAAJ,CAAsB,YAAtB,EAAoCJ,WAApC,CAAjB;AAEAK,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAY;AAC3C,UAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,QAAT,CAAkB,KAAlB,EAAyB,EAAzB,CAAvB;AACA,sBAAOD,QAAQ,CAACE,MAAhB,EAAwBC,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC;AACD,GAHC,CAAF;AAKAL,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAC5C,UAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACQ,UAAT,CAAoB,KAApB,EAA2B,CAChD,mBADgD,EAEhDC,IAAI,CAACC,SAAL,CAAe;AACbC,MAAAA,IAAI,EAAE,MADO;AAEbC,MAAAA,IAAI,EAAE;AAFO,KAAf,CAFgD,CAA3B,CAAvB;AAOA,sBAAOT,QAAQ,CAACE,MAAhB,EAAwBC,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC;AACD,GATC,CAAF;AAWAL,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAC5C,UAAMF,QAAQ,CAACQ,UAAT,CAAoB,KAApB,EAA2B,CAC/B,mBAD+B,EAE/BC,IAAI,CAACC,SAAL,CAAe;AACbC,MAAAA,IAAI,EAAE,cADO;AAEbC,MAAAA,IAAI,EAAE;AAFO,KAAf,CAF+B,CAA3B,CAAN;AAQA,UAAMC,WAAW,GAAG,MAAMb,QAAQ,CAACQ,UAAT,CAAoB,KAApB,EAA2B,CAAC,aAAD,EAAgB,MAAhB,CAA3B,CAA1B;AACA,sBAAOC,IAAI,CAACK,KAAL,CAAWD,WAAW,CAACE,OAAvB,EAAgCJ,IAAvC,EAA6CL,EAA7C,CAAgDC,KAAhD,CAAsD,cAAtD;AACD,GAXC,CAAF;AAaAL,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAC5C,UAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACQ,UAAT,CAAoB,KAApB,EAA2B,CAAC,mBAAD,EAAsB,MAAtB,CAA3B,CAAvB;AACA,sBAAOL,QAAQ,CAACE,MAAhB,EAAwBC,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC;AACD,GAHC,CAAF;AAID,CApCO,CAAR",
      "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/test",
      "sourcesContent": [
        "import { expect } from 'chai';\nimport { ChaincodeMockStub } from '@theledger/fabric-mock-stub';\nimport Chaincode from '../app/chaincode';\n\nconst MyChaincode = new Chaincode();\n\ndescribe('Test Organizacao chaincode', () => {\n  const mockStub = new ChaincodeMockStub('MyMockStub', MyChaincode);\n\n  it('Should init without issues', async () => {\n    const response = await mockStub.mockInit('tx1', []);\n    expect(response.status).to.equal(200);\n  });\n\n  it('I can create an organizacao', async () => {\n    const response = await mockStub.mockInvoke('tx1', [\n      'createOrganizacao',\n      JSON.stringify({\n        nome: 'test',\n        cnpj: 'test'\n      })\n    ]);\n    expect(response.status).to.equal(200);\n  });\n\n  it('I can update an organizacao', async () => {\n    await mockStub.mockInvoke('tx1', [\n      'updateOrganizacao',\n      JSON.stringify({\n        nome: 'test_updated',\n        cnpj: 'test'\n      })\n    ]);\n\n    const dataUpdated = await mockStub.mockInvoke('tx1', ['getDataById', 'test']);\n    expect(JSON.parse(dataUpdated.payload).nome).to.equal('test_updated');\n  });\n\n  it('I can delete an organizacao', async () => {\n    const response = await mockStub.mockInvoke('tx1', ['deleteOrganizacao', 'test']);\n    expect(response.status).to.equal(200);\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560365798485
  },
  "{\"sourceRoot\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao\",\"filename\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/chaincode.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao",
      "filename": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/chaincode.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/chaincode.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/chaincode.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app",
        "sourceFileName": "chaincode.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _fabricShim = _interopRequireDefault(require(\"fabric-shim\"));\n\nvar Organizacao = _interopRequireWildcard(require(\"./controllers/organizacao\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass Chaincode {\n  async Init(stub) {\n    const ret = stub.getFunctionAndParameters();\n    console.info(ret);\n    console.info('=========== Instantiated Chaincode ===========');\n    return _fabricShim.default.success();\n  }\n\n  async Invoke(stub) {\n    console.info('########################################');\n    console.info(`Transaction ID: ${stub.getTxID()}`);\n    console.info(`Args: ${stub.getArgs()}`);\n    const ret = stub.getFunctionAndParameters();\n    console.info(ret);\n    const method = this[ret.fcn]; // Verifies if method exist\n\n    if (!method) {\n      return _fabricShim.default.error(`funcao com nome \"${ret.fcn}\" nao encontrado`);\n    }\n\n    try {\n      const payload = await method(stub, ret.params, this);\n      return _fabricShim.default.success(payload);\n    } catch (err) {\n      console.log(err.stack);\n      return _fabricShim.default.error(err.message ? err.message : 'Ocorreu um erro, Por favor tente novamente mais tarde');\n    }\n  }\n\n  async getDataById(stub, args) {\n    // Gets id\n    const data = args[0]; // Verifies id is not empty\n\n    if (!data) {\n      throw new Error('Por favor especifique um id');\n    }\n\n    console.info('--- start getDataById ---');\n    const dataAsBytes = await stub.getState(data);\n    console.info('==================');\n    console.log(dataAsBytes.toString());\n    console.info('==================');\n    console.info('--- end getDataById ---');\n    return dataAsBytes;\n  } // The keys are returned by the iterator in lexical order. Note that startKey and endKey can be empty string\n  // Query is re-executed during validation phase\n\n\n  async getDataByRange(stub, args, thisClass) {\n    let data; // 1. Parses JSON stringified request\n\n    try {\n      data = JSON.parse(args.toString());\n    } catch (err) {\n      throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n    } // 2. Gets identifier\n\n\n    const {\n      startKey,\n      endKey\n    } = data;\n\n    if (startKey === undefined || endKey === undefined) {\n      throw new Error('startKey/endKey nao pode ser \"undefined\"');\n    }\n\n    console.info('--- start getDataByRange ---');\n    const resultsIterator = await stub.getStateByRange(startKey, endKey);\n    const method = thisClass['getAllResults'];\n    const results = await method(resultsIterator, false);\n    console.info('--- end getDataByRange ---');\n    return Buffer.from(JSON.stringify(results));\n  }\n\n  async createOrganizacao(stub, args) {\n    try {\n      await Organizacao.createOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOrganizacao(stub, args) {\n    try {\n      await Organizacao.updateOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteOrganizacao(stub, args) {\n    try {\n      await Organizacao.deleteOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  } // Rich Query (Only supported if CouchDB is used as state database):\n  // ex: peer chaincode query -C myc -n mycc -c '{\"Args\":[\"richQuery\",\"{\\\"selector\\\":{\\\"docType\\\":\\\"batch\\\"}}\"]}'\n\n\n  async richQuery(stub, args, thisClass) {\n    let data;\n    let method;\n    let params; // 1. Parses JSON stringified request\n\n    try {\n      data = JSON.parse(args.toString());\n    } catch (err) {\n      throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n    } // Verifies if queryString is passed\n\n\n    if (!data.queryString) {\n      throw new Error('queryString nao pode ser vazio');\n    }\n\n    const queryString = JSON.stringify(data.queryString); // If pagination params are passed gets QueryResult with pagination\n\n    if (data.pagination && data.pagination.pageSize) {\n      params = {\n        queryString,\n        pagination: data.pagination\n      };\n      method = thisClass['getQueryResultForQueryStringWithPagination'];\n    } else {\n      params = queryString;\n      method = thisClass['getQueryResultForQueryString'];\n    }\n\n    let queryResults;\n\n    try {\n      queryResults = await method(stub, params, thisClass);\n    } catch (err) {\n      throw err;\n    }\n\n    return queryResults;\n  } // getQueryResultForQueryString executes the query passed in query string.\n\n\n  async getQueryResultForQueryString(stub, queryString, thisClass) {\n    try {\n      console.info('- getQueryResultForQueryString ---');\n      const resultsIterator = await stub.getQueryResult(queryString);\n      const method = thisClass['getAllResults'];\n      const results = await method(resultsIterator, false);\n      console.log('--- end using getQueryResultForQueryString ---');\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  } // ====== Pagination =========================================================================\n  // queryString, pageSize, bookmark\n\n\n  async getQueryResultForQueryStringWithPagination(stub, args, thisClass) {\n    try {\n      console.log('--- start using getQueryResultForQueryStringWithPagination ---');\n      const {\n        queryString,\n        pagination\n      } = args;\n      const pageSize = parseInt(pagination.pageSize, 10);\n      const bookmark = pagination.bookmark || '';\n      const {\n        iterator,\n        metadata\n      } = await stub.getQueryResultWithPagination(queryString, pageSize, bookmark);\n      const getAllResults = thisClass['getAllResults'];\n      const results = await getAllResults(iterator, false); // use RecordsCount and Bookmark to keep consistency with the go sample\n\n      results.ResponseMetadata = {\n        RecordsCount: metadata.fetched_records_count,\n        Bookmark: metadata.bookmark\n      };\n      console.log('--- end using getQueryResultForQueryStringWithPagination ---');\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getAllResults(iterator, isHistory) {\n    const allResults = [];\n\n    while (true) {\n      /* eslint-disable no-await-in-loop */\n      const res = await iterator.next();\n\n      if (res.value && res.value.value.toString()) {\n        const jsonResponse = {}; // console.log(res.value.value.toString(\"utf8\"));\n\n        if (isHistory && isHistory === true) {\n          jsonResponse.TxId = res.value.tx_id;\n          jsonResponse.Timestamp = res.value.timestamp;\n          jsonResponse.IsDelete = res.value.is_delete.toString();\n\n          try {\n            jsonResponse.Value = JSON.parse(res.value.value.toString('utf8'));\n          } catch (err) {\n            console.log(err);\n            jsonResponse.Value = res.value.value.toString('utf8');\n          }\n        } else {\n          jsonResponse.Key = res.value.key;\n\n          try {\n            jsonResponse.Record = JSON.parse(res.value.value.toString('utf8'));\n          } catch (err) {\n            console.log(err);\n            jsonResponse.Record = res.value.value.toString('utf8');\n          }\n        }\n\n        allResults.push(jsonResponse);\n      }\n\n      if (res.done) {\n        console.log('end of data');\n        await iterator.close();\n        console.info(JSON.stringify(allResults));\n        return allResults;\n      }\n    }\n  }\n\n  async getHistory(stub, args, thisClass) {\n    try {\n      if (args.length < 1) {\n        throw new Error('Incorrect number of arguments. Expecting an id to look for');\n      }\n\n      const id = args[0];\n      console.info(`--- start getHistoryFor:\\n ${id}`);\n      const resultsIterator = await stub.getHistoryForKey(id);\n      const method = thisClass['getAllResults'];\n      const results = await method(resultsIterator, true);\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  }\n\n}\n\nexports.default = Chaincode;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "chaincode.js"
      ],
      "names": [
        "Chaincode",
        "Init",
        "stub",
        "ret",
        "getFunctionAndParameters",
        "console",
        "info",
        "shim",
        "success",
        "Invoke",
        "getTxID",
        "getArgs",
        "method",
        "fcn",
        "error",
        "payload",
        "params",
        "err",
        "log",
        "stack",
        "message",
        "getDataById",
        "args",
        "data",
        "Error",
        "dataAsBytes",
        "getState",
        "toString",
        "getDataByRange",
        "thisClass",
        "JSON",
        "parse",
        "startKey",
        "endKey",
        "undefined",
        "resultsIterator",
        "getStateByRange",
        "results",
        "Buffer",
        "from",
        "stringify",
        "createOrganizacao",
        "Organizacao",
        "updateOrganizacao",
        "deleteOrganizacao",
        "richQuery",
        "queryString",
        "pagination",
        "pageSize",
        "queryResults",
        "getQueryResultForQueryString",
        "getQueryResult",
        "getQueryResultForQueryStringWithPagination",
        "parseInt",
        "bookmark",
        "iterator",
        "metadata",
        "getQueryResultWithPagination",
        "getAllResults",
        "ResponseMetadata",
        "RecordsCount",
        "fetched_records_count",
        "Bookmark",
        "isHistory",
        "allResults",
        "res",
        "next",
        "value",
        "jsonResponse",
        "TxId",
        "tx_id",
        "Timestamp",
        "timestamp",
        "IsDelete",
        "is_delete",
        "Value",
        "Key",
        "key",
        "Record",
        "push",
        "done",
        "close",
        "getHistory",
        "length",
        "id",
        "getHistoryForKey"
      ],
      "mappings": "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",
      "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app",
      "sourcesContent": [
        "import shim from 'fabric-shim';\nimport * as Organizacao from './controllers/organizacao';\n\nexport default class Chaincode {\n  async Init(stub) {\n    const ret = stub.getFunctionAndParameters();\n    console.info(ret);\n    console.info('=========== Instantiated Chaincode ===========');\n    return shim.success();\n  }\n\n  async Invoke(stub) {\n    console.info('########################################');\n    console.info(`Transaction ID: ${stub.getTxID()}`);\n    console.info(`Args: ${stub.getArgs()}`);\n\n    const ret = stub.getFunctionAndParameters();\n    console.info(ret);\n\n    const method = this[ret.fcn];\n\n    // Verifies if method exist\n    if (!method) {\n      return shim.error(`funcao com nome \"${ret.fcn}\" nao encontrado`);\n    }\n\n    try {\n      const payload = await method(stub, ret.params, this);\n      return shim.success(payload);\n    } catch (err) {\n      console.log(err.stack);\n      return shim.error(err.message ? err.message : 'Ocorreu um erro, Por favor tente novamente mais tarde');\n    }\n  }\n\n  async getDataById(stub, args) {\n    // Gets id\n    const data = args[0];\n\n    // Verifies id is not empty\n    if (!data) {\n      throw new Error('Por favor especifique um id');\n    }\n\n    console.info('--- start getDataById ---');\n\n    const dataAsBytes = await stub.getState(data);\n\n    console.info('==================');\n    console.log(dataAsBytes.toString());\n    console.info('==================');\n\n    console.info('--- end getDataById ---');\n\n    return dataAsBytes;\n  }\n\n  // The keys are returned by the iterator in lexical order. Note that startKey and endKey can be empty string\n  // Query is re-executed during validation phase\n  async getDataByRange(stub, args, thisClass) {\n    let data;\n\n    // 1. Parses JSON stringified request\n    try {\n      data = JSON.parse(args.toString());\n    } catch (err) {\n      throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n    }\n\n    // 2. Gets identifier\n    const { startKey, endKey } = data;\n    if (startKey === undefined || endKey === undefined) {\n      throw new Error('startKey/endKey nao pode ser \"undefined\"');\n    }\n\n    console.info('--- start getDataByRange ---');\n\n    const resultsIterator = await stub.getStateByRange(startKey, endKey);\n    const method = thisClass['getAllResults'];\n    const results = await method(resultsIterator, false);\n\n    console.info('--- end getDataByRange ---');\n\n    return Buffer.from(JSON.stringify(results));\n  }\n\n  async createOrganizacao(stub, args) {\n    try {\n      await Organizacao.createOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOrganizacao(stub, args) {\n    try {\n      await Organizacao.updateOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteOrganizacao(stub, args) {\n    try {\n      await Organizacao.deleteOrganizacao(stub, args);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  // Rich Query (Only supported if CouchDB is used as state database):\n  // ex: peer chaincode query -C myc -n mycc -c '{\"Args\":[\"richQuery\",\"{\\\"selector\\\":{\\\"docType\\\":\\\"batch\\\"}}\"]}'\n  async richQuery(stub, args, thisClass) {\n    let data;\n    let method;\n    let params;\n\n    // 1. Parses JSON stringified request\n    try {\n      data = JSON.parse(args.toString());\n    } catch (err) {\n      throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n    }\n\n    // Verifies if queryString is passed\n    if (!data.queryString) {\n      throw new Error('queryString nao pode ser vazio');\n    }\n\n    const queryString = JSON.stringify(data.queryString);\n\n    // If pagination params are passed gets QueryResult with pagination\n    if (data.pagination && data.pagination.pageSize) {\n      params = { queryString, pagination: data.pagination };\n      method = thisClass['getQueryResultForQueryStringWithPagination'];\n    } else {\n      params = queryString;\n      method = thisClass['getQueryResultForQueryString'];\n    }\n    let queryResults;\n    try {\n      queryResults = await method(stub, params, thisClass);\n    } catch (err) {\n      throw err;\n    }\n\n    return queryResults;\n  }\n\n  // getQueryResultForQueryString executes the query passed in query string.\n  async getQueryResultForQueryString(stub, queryString, thisClass) {\n    try {\n      console.info('- getQueryResultForQueryString ---');\n\n      const resultsIterator = await stub.getQueryResult(queryString);\n      const method = thisClass['getAllResults'];\n      const results = await method(resultsIterator, false);\n\n      console.log('--- end using getQueryResultForQueryString ---');\n\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  // ====== Pagination =========================================================================\n  // queryString, pageSize, bookmark\n  async getQueryResultForQueryStringWithPagination(stub, args, thisClass) {\n    try {\n      console.log('--- start using getQueryResultForQueryStringWithPagination ---');\n\n      const { queryString, pagination } = args;\n      const pageSize = parseInt(pagination.pageSize, 10);\n      const bookmark = pagination.bookmark || '';\n\n      const { iterator, metadata } = await stub.getQueryResultWithPagination(queryString, pageSize, bookmark);\n\n      const getAllResults = thisClass['getAllResults'];\n      const results = await getAllResults(iterator, false);\n      // use RecordsCount and Bookmark to keep consistency with the go sample\n      results.ResponseMetadata = {\n        RecordsCount: metadata.fetched_records_count,\n        Bookmark: metadata.bookmark\n      };\n\n      console.log('--- end using getQueryResultForQueryStringWithPagination ---');\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getAllResults(iterator, isHistory) {\n    const allResults = [];\n    while (true) {\n      /* eslint-disable no-await-in-loop */\n      const res = await iterator.next();\n\n      if (res.value && res.value.value.toString()) {\n        const jsonResponse = {};\n        // console.log(res.value.value.toString(\"utf8\"));\n\n        if (isHistory && isHistory === true) {\n          jsonResponse.TxId = res.value.tx_id;\n          jsonResponse.Timestamp = res.value.timestamp;\n          jsonResponse.IsDelete = res.value.is_delete.toString();\n          try {\n            jsonResponse.Value = JSON.parse(res.value.value.toString('utf8'));\n          } catch (err) {\n            console.log(err);\n            jsonResponse.Value = res.value.value.toString('utf8');\n          }\n        } else {\n          jsonResponse.Key = res.value.key;\n          try {\n            jsonResponse.Record = JSON.parse(res.value.value.toString('utf8'));\n          } catch (err) {\n            console.log(err);\n            jsonResponse.Record = res.value.value.toString('utf8');\n          }\n        }\n        allResults.push(jsonResponse);\n      }\n      if (res.done) {\n        console.log('end of data');\n        await iterator.close();\n        console.info(JSON.stringify(allResults));\n        return allResults;\n      }\n    }\n  }\n\n  async getHistory(stub, args, thisClass) {\n    try {\n      if (args.length < 1) {\n        throw new Error('Incorrect number of arguments. Expecting an id to look for');\n      }\n      const id = args[0];\n      console.info(`--- start getHistoryFor:\\n ${id}`);\n\n      const resultsIterator = await stub.getHistoryForKey(id);\n      const method = thisClass['getAllResults'];\n      const results = await method(resultsIterator, true);\n\n      return Buffer.from(JSON.stringify(results));\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560363656655
  },
  "{\"sourceRoot\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao\",\"filename\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/controllers/organizacao.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao",
      "filename": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/controllers/organizacao.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/controllers/organizacao.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/controllers/organizacao.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/controllers",
        "sourceFileName": "organizacao.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOrganizacao = exports.updateOrganizacao = exports.createOrganizacao = void 0;\n\nvar Schema = _interopRequireWildcard(require(\"../models/organizacao\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n// import { performance } from 'perf_hooks';\nconst validationOptions = {\n  recursive: true,\n  abortEarly: true,\n  stripUnknown: true\n};\n\nconst createOrganizacao = async (stub, args) => {\n  let data;\n  let formattedData; // 1. Parse JSON stringified request\n\n  try {\n    data = JSON.parse(args.toString('utf8'));\n  } catch (err) {\n    throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n  }\n\n  console.info('--- start createOrganizacao ---'); // 2. Get identifier\n\n  const id = data.cnpj;\n\n  if (!id) {\n    throw new Error('Por favor especifique o cnpj');\n  } // 3. Verifies data does not exist\n\n\n  let dataAsBytes = await stub.getState(id);\n\n  if (dataAsBytes.toString('utf8')) {\n    throw new Error(`Organizacao com cnpj ${id} ja existe`);\n  } // const t0 = performance.now();\n  // 4. Verifies Object format\n\n\n  try {\n    formattedData = await Schema.createOrganizacao.validate(data, validationOptions);\n  } catch (err) {\n    throw err;\n  } // const t1 = performance.now();\n  // console.log(`Call took ${t1 - t0} ms.`);\n  // 5. Sets Date information (not 100% reliable)\n\n\n  formattedData.createdAt = new Date(stub.getTxTimestamp().getSeconds() * 1000).toISOString();\n  formattedData.updatedAt = formattedData.createdAt; // 6. Transforms JSON into Bytes data\n\n  dataAsBytes = Buffer.from(JSON.stringify(formattedData)); // 7. Pushes updated data into the ledger\n\n  await stub.putState(id, dataAsBytes); // 8. Creates event\n\n  stub.setEvent('organizacaoCreated', dataAsBytes);\n  console.info('==================');\n  console.log(formattedData);\n  console.info('==================');\n  console.info('--- end createOrganizacao ---');\n};\n\nexports.createOrganizacao = createOrganizacao;\n\nconst updateOrganizacao = async (stub, args) => {\n  let data;\n  let formattedData; // 1. Parses JSON stringified request\n\n  try {\n    data = JSON.parse(args.toString('utf8'));\n  } catch (err) {\n    throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n  }\n\n  console.info('--- start updateOrganizacao ---'); // 2. Get identifier\n\n  const id = data.cnpj;\n\n  if (!id) {\n    throw new Error('Por favor especifique o cnpj');\n  } // 3. Verifies if data already exist\n\n\n  let dataAsBytes = await stub.getState(id);\n\n  if (!dataAsBytes.toString('utf8')) {\n    throw new Error(`Organizacao com cnpj ${id} nao encontrado`);\n  } // 4. Verifies Object format\n\n\n  try {\n    formattedData = await Schema.updateOrganizacao.validate(data, validationOptions);\n  } catch (err) {\n    throw err;\n  } // 5. Parses data that will be updated\n\n\n  const dataToUpdate = JSON.parse(dataAsBytes.toString('utf8')); // 6. Merges updated organizacao into organizacao to update -> Possibles to use specific merging function/lib to only update modified fields\n\n  const updatedData = { ...dataToUpdate,\n    ...formattedData\n  }; // 6.1 Updates updateAt\n\n  updatedData.updatedAt = new Date(stub.getTxTimestamp().getSeconds() * 1000).toISOString(); // 7. Transforms the JSON data into Bytes data\n\n  dataAsBytes = Buffer.from(JSON.stringify(updatedData)); // 8. Pushes updated data into the ledger\n\n  await stub.putState(id, dataAsBytes); // 9. Sends event\n\n  stub.setEvent('organizacaoUpdated', dataAsBytes);\n  console.info('==================');\n  console.log(updatedData);\n  console.info('==================');\n  console.info('--- end updateOrganizacao ---');\n};\n\nexports.updateOrganizacao = updateOrganizacao;\n\nconst deleteOrganizacao = async (stub, args) => {\n  const cnpj = args[0]; // 1. Verifies identifier is not empty\n\n  if (!cnpj) {\n    throw new Error('Por favor especifique o cnpj');\n  }\n\n  console.log('--- start deleteOrganizacao ---'); // 2. Verifies if data already exists\n\n  const dataAsBytes = await stub.getState(cnpj);\n\n  if (!dataAsBytes.toString('utf8')) {\n    throw new Error(`Organizacao com cnpj \"${cnpj}\" nao encontrado`);\n  } // 3. Deletes data\n\n\n  await stub.deleteState(cnpj); // 4. Sends event\n\n  stub.setEvent('organizacaoRemoved', dataAsBytes);\n  console.info('==================');\n  console.log(`organizacao com cnpj \"${cnpj}\" foi deletado`);\n  console.info('==================');\n  console.info('--- end deleteOrganizacao ---');\n};\n\nexports.deleteOrganizacao = deleteOrganizacao;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "organizacao.js"
      ],
      "names": [
        "validationOptions",
        "recursive",
        "abortEarly",
        "stripUnknown",
        "createOrganizacao",
        "stub",
        "args",
        "data",
        "formattedData",
        "JSON",
        "parse",
        "toString",
        "err",
        "Error",
        "console",
        "info",
        "id",
        "cnpj",
        "dataAsBytes",
        "getState",
        "Schema",
        "validate",
        "createdAt",
        "Date",
        "getTxTimestamp",
        "getSeconds",
        "toISOString",
        "updatedAt",
        "Buffer",
        "from",
        "stringify",
        "putState",
        "setEvent",
        "log",
        "updateOrganizacao",
        "dataToUpdate",
        "updatedData",
        "deleteOrganizacao",
        "deleteState"
      ],
      "mappings": "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",
      "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/controllers",
      "sourcesContent": [
        "// import { performance } from 'perf_hooks';\nimport * as Schema from '../models/organizacao';\n\nconst validationOptions = { recursive: true, abortEarly: true, stripUnknown: true };\n\nexport const createOrganizacao = async (stub, args) => {\n  let data;\n  let formattedData;\n\n  // 1. Parse JSON stringified request\n  try {\n    data = JSON.parse(args.toString('utf8'));\n  } catch (err) {\n    throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n  }\n\n  console.info('--- start createOrganizacao ---');\n\n  // 2. Get identifier\n  const id = data.cnpj;\n\n  if (!id) {\n    throw new Error('Por favor especifique o cnpj');\n  }\n\n  // 3. Verifies data does not exist\n  let dataAsBytes = await stub.getState(id);\n  if (dataAsBytes.toString('utf8')) {\n    throw new Error(`Organizacao com cnpj ${id} ja existe`);\n  }\n\n  // const t0 = performance.now();\n  // 4. Verifies Object format\n  try {\n    formattedData = await Schema.createOrganizacao.validate(data, validationOptions);\n  } catch (err) {\n    throw err;\n  }\n  // const t1 = performance.now();\n  // console.log(`Call took ${t1 - t0} ms.`);\n\n  // 5. Sets Date information (not 100% reliable)\n  formattedData.createdAt = new Date(stub.getTxTimestamp().getSeconds() * 1000).toISOString();\n  formattedData.updatedAt = formattedData.createdAt;\n\n  // 6. Transforms JSON into Bytes data\n  dataAsBytes = Buffer.from(JSON.stringify(formattedData));\n  // 7. Pushes updated data into the ledger\n  await stub.putState(id, dataAsBytes);\n  // 8. Creates event\n  stub.setEvent('organizacaoCreated', dataAsBytes);\n\n  console.info('==================');\n  console.log(formattedData);\n  console.info('==================');\n  console.info('--- end createOrganizacao ---');\n};\n\nexport const updateOrganizacao = async (stub, args) => {\n  let data;\n  let formattedData;\n\n  // 1. Parses JSON stringified request\n  try {\n    data = JSON.parse(args.toString('utf8'));\n  } catch (err) {\n    throw new Error('Não foi possivel decodificar o JSON, por favor verifique o formato');\n  }\n\n  console.info('--- start updateOrganizacao ---');\n\n  // 2. Get identifier\n  const id = data.cnpj;\n  if (!id) {\n    throw new Error('Por favor especifique o cnpj');\n  }\n\n  // 3. Verifies if data already exist\n  let dataAsBytes = await stub.getState(id);\n  if (!dataAsBytes.toString('utf8')) {\n    throw new Error(`Organizacao com cnpj ${id} nao encontrado`);\n  }\n\n  // 4. Verifies Object format\n  try {\n    formattedData = await Schema.updateOrganizacao.validate(data, validationOptions);\n  } catch (err) {\n    throw err;\n  }\n\n  // 5. Parses data that will be updated\n  const dataToUpdate = JSON.parse(dataAsBytes.toString('utf8'));\n  // 6. Merges updated organizacao into organizacao to update -> Possibles to use specific merging function/lib to only update modified fields\n  const updatedData = { ...dataToUpdate, ...formattedData };\n  // 6.1 Updates updateAt\n  updatedData.updatedAt = new Date(stub.getTxTimestamp().getSeconds() * 1000).toISOString();\n  // 7. Transforms the JSON data into Bytes data\n  dataAsBytes = Buffer.from(JSON.stringify(updatedData));\n\n  // 8. Pushes updated data into the ledger\n  await stub.putState(id, dataAsBytes);\n\n  // 9. Sends event\n  stub.setEvent('organizacaoUpdated', dataAsBytes);\n  console.info('==================');\n  console.log(updatedData);\n  console.info('==================');\n  console.info('--- end updateOrganizacao ---');\n};\n\nexport const deleteOrganizacao = async (stub, args) => {\n  const cnpj = args[0];\n\n  // 1. Verifies identifier is not empty\n  if (!cnpj) {\n    throw new Error('Por favor especifique o cnpj');\n  }\n\n  console.log('--- start deleteOrganizacao ---');\n\n  // 2. Verifies if data already exists\n  const dataAsBytes = await stub.getState(cnpj);\n  if (!dataAsBytes.toString('utf8')) {\n    throw new Error(`Organizacao com cnpj \"${cnpj}\" nao encontrado`);\n  }\n\n  // 3. Deletes data\n  await stub.deleteState(cnpj);\n\n  // 4. Sends event\n  stub.setEvent('organizacaoRemoved', dataAsBytes);\n  console.info('==================');\n  console.log(`organizacao com cnpj \"${cnpj}\" foi deletado`);\n  console.info('==================');\n  console.info('--- end deleteOrganizacao ---');\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560362889408
  },
  "{\"sourceRoot\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao\",\"filename\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/models/organizacao.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao",
      "filename": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/models/organizacao.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/models/organizacao.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/models/organizacao.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/models",
        "sourceFileName": "organizacao.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateOrganizacao = exports.createOrganizacao = void 0;\n\nvar yup = _interopRequireWildcard(require(\"yup\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n// for everything\n\n/* eslint-disable implicit-arrow-linebreak, operator-linebreak */\nconst createOrganizacao = yup.object().shape({\n  docType: yup.string().default('organizacao').test('is-docType-exist', 'Por favor especifique organizacao docType', value => value === 'organizacao'),\n  cnpj: yup.string().required(),\n  nome: yup.string().required(),\n  email: yup.string().lowercase().ensure(),\n  endereco: yup.object().shape({\n    rua: yup.string().ensure(),\n    numero: yup.string().ensure(),\n    complemento: yup.string().ensure(),\n    referencia: yup.string().ensure(),\n    bairro: yup.string().ensure(),\n    cep: yup.string().ensure(),\n    cidade: yup.string().ensure(),\n    uf: yup.string().ensure()\n  })\n});\nexports.createOrganizacao = createOrganizacao;\nconst updateOrganizacao = yup.object().shape({\n  nome: yup.string().lowercase(),\n  email: yup.string().lowercase(),\n  endereco: yup.object().shape({\n    rua: yup.string().ensure(),\n    numero: yup.string().ensure(),\n    complemento: yup.string().ensure(),\n    referencia: yup.string().ensure(),\n    bairro: yup.string().ensure(),\n    cep: yup.string().ensure(),\n    cidade: yup.string().ensure(),\n    uf: yup.string().ensure()\n  })\n});\nexports.updateOrganizacao = updateOrganizacao;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZ2FuaXphY2FvLmpzIl0sIm5hbWVzIjpbImNyZWF0ZU9yZ2FuaXphY2FvIiwieXVwIiwib2JqZWN0Iiwic2hhcGUiLCJkb2NUeXBlIiwic3RyaW5nIiwiZGVmYXVsdCIsInRlc3QiLCJ2YWx1ZSIsImNucGoiLCJyZXF1aXJlZCIsIm5vbWUiLCJlbWFpbCIsImxvd2VyY2FzZSIsImVuc3VyZSIsImVuZGVyZWNvIiwicnVhIiwibnVtZXJvIiwiY29tcGxlbWVudG8iLCJyZWZlcmVuY2lhIiwiYmFpcnJvIiwiY2VwIiwiY2lkYWRlIiwidWYiLCJ1cGRhdGVPcmdhbml6YWNhbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQTRCOztBQUU1QjtBQUNPLE1BQU1BLGlCQUFpQixHQUFHQyxHQUFHLENBQUNDLE1BQUosR0FBYUMsS0FBYixDQUFtQjtBQUNsREMsRUFBQUEsT0FBTyxFQUFFSCxHQUFHLENBQ1RJLE1BRE0sR0FFTkMsT0FGTSxDQUVFLGFBRkYsRUFHTkMsSUFITSxDQUdELGtCQUhDLEVBR21CLDJDQUhuQixFQUdnRUMsS0FBSyxJQUFJQSxLQUFLLEtBQUssYUFIbkYsQ0FEeUM7QUFLbERDLEVBQUFBLElBQUksRUFBRVIsR0FBRyxDQUFDSSxNQUFKLEdBQWFLLFFBQWIsRUFMNEM7QUFNbERDLEVBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDSSxNQUFKLEdBQWFLLFFBQWIsRUFONEM7QUFPbERFLEVBQUFBLEtBQUssRUFBRVgsR0FBRyxDQUNQSSxNQURJLEdBRUpRLFNBRkksR0FHSkMsTUFISSxFQVAyQztBQVdsREMsRUFBQUEsUUFBUSxFQUFFZCxHQUFHLENBQUNDLE1BQUosR0FBYUMsS0FBYixDQUFtQjtBQUMzQmEsSUFBQUEsR0FBRyxFQUFFZixHQUFHLENBQUNJLE1BQUosR0FBYVMsTUFBYixFQURzQjtBQUUzQkcsSUFBQUEsTUFBTSxFQUFFaEIsR0FBRyxDQUFDSSxNQUFKLEdBQWFTLE1BQWIsRUFGbUI7QUFHM0JJLElBQUFBLFdBQVcsRUFBRWpCLEdBQUcsQ0FBQ0ksTUFBSixHQUFhUyxNQUFiLEVBSGM7QUFJM0JLLElBQUFBLFVBQVUsRUFBRWxCLEdBQUcsQ0FBQ0ksTUFBSixHQUFhUyxNQUFiLEVBSmU7QUFLM0JNLElBQUFBLE1BQU0sRUFBRW5CLEdBQUcsQ0FBQ0ksTUFBSixHQUFhUyxNQUFiLEVBTG1CO0FBTTNCTyxJQUFBQSxHQUFHLEVBQUVwQixHQUFHLENBQUNJLE1BQUosR0FBYVMsTUFBYixFQU5zQjtBQU8zQlEsSUFBQUEsTUFBTSxFQUFFckIsR0FBRyxDQUFDSSxNQUFKLEdBQWFTLE1BQWIsRUFQbUI7QUFRM0JTLElBQUFBLEVBQUUsRUFBRXRCLEdBQUcsQ0FBQ0ksTUFBSixHQUFhUyxNQUFiO0FBUnVCLEdBQW5CO0FBWHdDLENBQW5CLENBQTFCOztBQXVCQSxNQUFNVSxpQkFBaUIsR0FBR3ZCLEdBQUcsQ0FBQ0MsTUFBSixHQUFhQyxLQUFiLENBQW1CO0FBQ2xEUSxFQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ0ksTUFBSixHQUFhUSxTQUFiLEVBRDRDO0FBRWxERCxFQUFBQSxLQUFLLEVBQUVYLEdBQUcsQ0FBQ0ksTUFBSixHQUFhUSxTQUFiLEVBRjJDO0FBR2xERSxFQUFBQSxRQUFRLEVBQUVkLEdBQUcsQ0FBQ0MsTUFBSixHQUFhQyxLQUFiLENBQW1CO0FBQzNCYSxJQUFBQSxHQUFHLEVBQUVmLEdBQUcsQ0FBQ0ksTUFBSixHQUFhUyxNQUFiLEVBRHNCO0FBRTNCRyxJQUFBQSxNQUFNLEVBQUVoQixHQUFHLENBQUNJLE1BQUosR0FBYVMsTUFBYixFQUZtQjtBQUczQkksSUFBQUEsV0FBVyxFQUFFakIsR0FBRyxDQUFDSSxNQUFKLEdBQWFTLE1BQWIsRUFIYztBQUkzQkssSUFBQUEsVUFBVSxFQUFFbEIsR0FBRyxDQUFDSSxNQUFKLEdBQWFTLE1BQWIsRUFKZTtBQUszQk0sSUFBQUEsTUFBTSxFQUFFbkIsR0FBRyxDQUFDSSxNQUFKLEdBQWFTLE1BQWIsRUFMbUI7QUFNM0JPLElBQUFBLEdBQUcsRUFBRXBCLEdBQUcsQ0FBQ0ksTUFBSixHQUFhUyxNQUFiLEVBTnNCO0FBTzNCUSxJQUFBQSxNQUFNLEVBQUVyQixHQUFHLENBQUNJLE1BQUosR0FBYVMsTUFBYixFQVBtQjtBQVEzQlMsSUFBQUEsRUFBRSxFQUFFdEIsR0FBRyxDQUFDSSxNQUFKLEdBQWFTLE1BQWI7QUFSdUIsR0FBbkI7QUFId0MsQ0FBbkIsQ0FBMUIiLCJzb3VyY2VSb290IjoiL2hvbWUvam9uYXRoYW4vQnVyZWF1L0h5cGVybGVkZ2VyLWJyYXNpbGlhbi1jaGFwdGVyL21hdGVyaWFscy9pbnRyb2R1Y3Rpb24tY2hhaW5jb2RlL2Rldi1tb2RlL2NoYWluY29kZS9vcmdhbml6YWNhby9hcHAvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgeXVwIGZyb20gJ3l1cCc7IC8vIGZvciBldmVyeXRoaW5nXG5cbi8qIGVzbGludC1kaXNhYmxlIGltcGxpY2l0LWFycm93LWxpbmVicmVhaywgb3BlcmF0b3ItbGluZWJyZWFrICovXG5leHBvcnQgY29uc3QgY3JlYXRlT3JnYW5pemFjYW8gPSB5dXAub2JqZWN0KCkuc2hhcGUoe1xuICBkb2NUeXBlOiB5dXBcbiAgICAuc3RyaW5nKClcbiAgICAuZGVmYXVsdCgnb3JnYW5pemFjYW8nKVxuICAgIC50ZXN0KCdpcy1kb2NUeXBlLWV4aXN0JywgJ1BvciBmYXZvciBlc3BlY2lmaXF1ZSBvcmdhbml6YWNhbyBkb2NUeXBlJywgdmFsdWUgPT4gdmFsdWUgPT09ICdvcmdhbml6YWNhbycpLFxuICBjbnBqOiB5dXAuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgbm9tZTogeXVwLnN0cmluZygpLnJlcXVpcmVkKCksXG4gIGVtYWlsOiB5dXBcbiAgICAuc3RyaW5nKClcbiAgICAubG93ZXJjYXNlKClcbiAgICAuZW5zdXJlKCksXG4gIGVuZGVyZWNvOiB5dXAub2JqZWN0KCkuc2hhcGUoe1xuICAgIHJ1YTogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIG51bWVybzogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIGNvbXBsZW1lbnRvOiB5dXAuc3RyaW5nKCkuZW5zdXJlKCksXG4gICAgcmVmZXJlbmNpYTogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIGJhaXJybzogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIGNlcDogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIGNpZGFkZTogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIHVmOiB5dXAuc3RyaW5nKCkuZW5zdXJlKClcbiAgfSlcbn0pO1xuXG5leHBvcnQgY29uc3QgdXBkYXRlT3JnYW5pemFjYW8gPSB5dXAub2JqZWN0KCkuc2hhcGUoe1xuICBub21lOiB5dXAuc3RyaW5nKCkubG93ZXJjYXNlKCksXG4gIGVtYWlsOiB5dXAuc3RyaW5nKCkubG93ZXJjYXNlKCksXG4gIGVuZGVyZWNvOiB5dXAub2JqZWN0KCkuc2hhcGUoe1xuICAgIHJ1YTogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIG51bWVybzogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIGNvbXBsZW1lbnRvOiB5dXAuc3RyaW5nKCkuZW5zdXJlKCksXG4gICAgcmVmZXJlbmNpYTogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIGJhaXJybzogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIGNlcDogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIGNpZGFkZTogeXVwLnN0cmluZygpLmVuc3VyZSgpLFxuICAgIHVmOiB5dXAuc3RyaW5nKCkuZW5zdXJlKClcbiAgfSlcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "organizacao.js"
      ],
      "names": [
        "createOrganizacao",
        "yup",
        "object",
        "shape",
        "docType",
        "string",
        "default",
        "test",
        "value",
        "cnpj",
        "required",
        "nome",
        "email",
        "lowercase",
        "ensure",
        "endereco",
        "rua",
        "numero",
        "complemento",
        "referencia",
        "bairro",
        "cep",
        "cidade",
        "uf",
        "updateOrganizacao"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAA4B;;AAE5B;AACO,MAAMA,iBAAiB,GAAGC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAClDC,EAAAA,OAAO,EAAEH,GAAG,CACTI,MADM,GAENC,OAFM,CAEE,aAFF,EAGNC,IAHM,CAGD,kBAHC,EAGmB,2CAHnB,EAGgEC,KAAK,IAAIA,KAAK,KAAK,aAHnF,CADyC;AAKlDC,EAAAA,IAAI,EAAER,GAAG,CAACI,MAAJ,GAAaK,QAAb,EAL4C;AAMlDC,EAAAA,IAAI,EAAEV,GAAG,CAACI,MAAJ,GAAaK,QAAb,EAN4C;AAOlDE,EAAAA,KAAK,EAAEX,GAAG,CACPI,MADI,GAEJQ,SAFI,GAGJC,MAHI,EAP2C;AAWlDC,EAAAA,QAAQ,EAAEd,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAC3Ba,IAAAA,GAAG,EAAEf,GAAG,CAACI,MAAJ,GAAaS,MAAb,EADsB;AAE3BG,IAAAA,MAAM,EAAEhB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EAFmB;AAG3BI,IAAAA,WAAW,EAAEjB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EAHc;AAI3BK,IAAAA,UAAU,EAAElB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EAJe;AAK3BM,IAAAA,MAAM,EAAEnB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EALmB;AAM3BO,IAAAA,GAAG,EAAEpB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EANsB;AAO3BQ,IAAAA,MAAM,EAAErB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EAPmB;AAQ3BS,IAAAA,EAAE,EAAEtB,GAAG,CAACI,MAAJ,GAAaS,MAAb;AARuB,GAAnB;AAXwC,CAAnB,CAA1B;;AAuBA,MAAMU,iBAAiB,GAAGvB,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAClDQ,EAAAA,IAAI,EAAEV,GAAG,CAACI,MAAJ,GAAaQ,SAAb,EAD4C;AAElDD,EAAAA,KAAK,EAAEX,GAAG,CAACI,MAAJ,GAAaQ,SAAb,EAF2C;AAGlDE,EAAAA,QAAQ,EAAEd,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAC3Ba,IAAAA,GAAG,EAAEf,GAAG,CAACI,MAAJ,GAAaS,MAAb,EADsB;AAE3BG,IAAAA,MAAM,EAAEhB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EAFmB;AAG3BI,IAAAA,WAAW,EAAEjB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EAHc;AAI3BK,IAAAA,UAAU,EAAElB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EAJe;AAK3BM,IAAAA,MAAM,EAAEnB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EALmB;AAM3BO,IAAAA,GAAG,EAAEpB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EANsB;AAO3BQ,IAAAA,MAAM,EAAErB,GAAG,CAACI,MAAJ,GAAaS,MAAb,EAPmB;AAQ3BS,IAAAA,EAAE,EAAEtB,GAAG,CAACI,MAAJ,GAAaS,MAAb;AARuB,GAAnB;AAHwC,CAAnB,CAA1B",
      "sourceRoot": "/home/jonathan/Bureau/Hyperledger-brasilian-chapter/materials/introduction-chaincode/dev-mode/chaincode/organizacao/app/models",
      "sourcesContent": [
        "import * as yup from 'yup'; // for everything\n\n/* eslint-disable implicit-arrow-linebreak, operator-linebreak */\nexport const createOrganizacao = yup.object().shape({\n  docType: yup\n    .string()\n    .default('organizacao')\n    .test('is-docType-exist', 'Por favor especifique organizacao docType', value => value === 'organizacao'),\n  cnpj: yup.string().required(),\n  nome: yup.string().required(),\n  email: yup\n    .string()\n    .lowercase()\n    .ensure(),\n  endereco: yup.object().shape({\n    rua: yup.string().ensure(),\n    numero: yup.string().ensure(),\n    complemento: yup.string().ensure(),\n    referencia: yup.string().ensure(),\n    bairro: yup.string().ensure(),\n    cep: yup.string().ensure(),\n    cidade: yup.string().ensure(),\n    uf: yup.string().ensure()\n  })\n});\n\nexport const updateOrganizacao = yup.object().shape({\n  nome: yup.string().lowercase(),\n  email: yup.string().lowercase(),\n  endereco: yup.object().shape({\n    rua: yup.string().ensure(),\n    numero: yup.string().ensure(),\n    complemento: yup.string().ensure(),\n    referencia: yup.string().ensure(),\n    bairro: yup.string().ensure(),\n    cep: yup.string().ensure(),\n    cidade: yup.string().ensure(),\n    uf: yup.string().ensure()\n  })\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560362733464
  }
}